import { replyMessage, sendFlexMessage } from "../services/line.service.js";
import { appendRow } from "../services/sheet.service.js";
import { 
  createExerciseNotification, 
  handleExerciseConfirmation, 
  getUserConfirmationStatus,
  createWeeklySummary 
} from "../services/exercise.service.js";
import { 
  subscribeUser, 
  unsubscribeUser, 
  isUserSubscribed,
  testNotification 
} from "../services/notification.service.js";

export const handleLineWebhook = async (req, res) => {
  try {
    const events = req.body.events;

    for (let event of events) {
      if (event.type === "message" && event.message.type === "text") {
        const replyToken = event.replyToken;
        const userId = event.source.userId;
        const userMessage = event.message.text.toLowerCase().trim();

        // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ
        if (userMessage === "‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢" || userMessage === "exercise") {
          await handleExerciseCommand(replyToken, userId);
        } 
        else if (userMessage === "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô" || userMessage === "confirm") {
          await handleConfirmationCommand(replyToken, userId, true);
        }
        else if (userMessage === "‡∏Ç‡πâ‡∏≤‡∏°" || userMessage === "skip") {
          await handleConfirmationCommand(replyToken, userId, false);
        }
        else if (userMessage === "‡∏™‡∏£‡∏∏‡∏õ" || userMessage === "summary") {
          await handleSummaryCommand(replyToken, userId);
        }
        else if (userMessage === "‡∏™‡∏°‡∏±‡∏Ñ‡∏£" || userMessage === "subscribe") {
          await handleSubscribeCommand(replyToken, userId);
        }
        else if (userMessage === "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å" || userMessage === "unsubscribe") {
          await handleUnsubscribeCommand(replyToken, userId);
        }
        else if (userMessage === "‡∏ó‡∏î‡∏™‡∏≠‡∏ö" || userMessage === "test") {
          await handleTestCommand(replyToken, userId);
        }
        else if (userMessage === "‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠" || userMessage === "help") {
          await handleHelpCommand(replyToken);
        }
        else {
          // ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å
          await replyMessage(replyToken, 
            "ü§ñ ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ! ‡∏â‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏≠‡∏ó‡∏ä‡πà‡∏ß‡∏¢‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢\n\n" +
            "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ:\n" +
            "‚Ä¢ '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢' - ‡∏î‡∏π‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ\n" +
            "‚Ä¢ '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô' - ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ß‡πà‡∏≤‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß\n" +
            "‚Ä¢ '‡∏Ç‡πâ‡∏≤‡∏°' - ‡∏Ç‡πâ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ\n" +
            "‚Ä¢ '‡∏™‡∏£‡∏∏‡∏õ' - ‡∏î‡∏π‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ\n" +
            "‚Ä¢ '‡∏™‡∏°‡∏±‡∏Ñ‡∏£' - ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô\n" +
            "‚Ä¢ '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å' - ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô\n" +
            "‚Ä¢ '‡∏ó‡∏î‡∏™‡∏≠‡∏ö' - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô\n" +
            "‚Ä¢ '‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠' - ‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î\n\n" +
            "üí™ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á?"
          );
        }
      }
      else if (event.type === "postback") {
        // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Postback events (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö buttons)
        const replyToken = event.replyToken;
        const userId = event.source.userId;
        const data = event.postback.data;

        if (data === "confirm_exercise") {
          await handleConfirmationCommand(replyToken, userId, true);
        } else if (data === "skip_exercise") {
          await handleConfirmationCommand(replyToken, userId, false);
        } else if (data === "get_exercise") {
          await handleExerciseCommand(replyToken, userId);
        }
      }
    }

    res.status(200).end();
  } catch (err) {
    console.error("Error in handleLineWebhook:", err);
    res.status(500).send("Error");
  }
};

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢
const handleExerciseCommand = async (replyToken, userId) => {
  try {
    const result = await createExerciseNotification(userId);
    
    if (result.success) {
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
      const flexMessage = {
        type: "flex",
        altText: "‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ",
        contents: {
          type: "bubble",
          header: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "üèãÔ∏è‚Äç‚ôÄÔ∏è ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ",
                weight: "bold",
                size: "lg",
                color: "#1DB446"
              }
            ]
          },
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: result.message,
                wrap: true,
                size: "sm"
              }
            ]
          },
          footer: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "button",
                action: {
                  type: "postback",
                  label: "‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢",
                  data: "confirm_exercise",
                  displayText: "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß"
                },
                style: "primary",
                color: "#1DB446"
              },
              {
                type: "button",
                action: {
                  type: "postback",
                  label: "‚è≠Ô∏è ‡∏Ç‡πâ‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ",
                  data: "skip_exercise",
                  displayText: "‡∏Ç‡πâ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ"
                },
                style: "secondary"
              }
            ]
          }
        }
      };

      await sendFlexMessage(replyToken, flexMessage);
    } else {
      await replyMessage(replyToken, result.message);
    }
  } catch (error) {
    console.error("Error in handleExerciseCommand:", error);
    await replyMessage(replyToken, "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢");
  }
};

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
const handleConfirmationCommand = async (replyToken, userId, confirmed) => {
  try {
    const result = await handleExerciseConfirmation(userId, confirmed);
    
    if (result.success) {
      await replyMessage(replyToken, result.message);
    } else {
      await replyMessage(replyToken, result.message);
    }
  } catch (error) {
    console.error("Error in handleConfirmationCommand:", error);
    await replyMessage(replyToken, "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô");
  }
};

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏£‡∏∏‡∏õ
const handleSummaryCommand = async (replyToken, userId) => {
  try {
    const result = createWeeklySummary(userId);
    
    if (result.success) {
      await replyMessage(replyToken, result.message);
    } else {
      await replyMessage(replyToken, result.message);
    }
  } catch (error) {
    console.error("Error in handleSummaryCommand:", error);
    await replyMessage(replyToken, "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏∏‡∏õ");
  }
};

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠
const handleHelpCommand = async (replyToken) => {
  const helpMessage = 
    "ü§ñ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ:\n\n" +
    "üèãÔ∏è‚Äç‚ôÄÔ∏è '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢' - ‡∏î‡∏π‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ\n" +
    "‚úÖ '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô' - ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ß‡πà‡∏≤‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß\n" +
    "‚è≠Ô∏è '‡∏Ç‡πâ‡∏≤‡∏°' - ‡∏Ç‡πâ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ\n" +
    "üìä '‡∏™‡∏£‡∏∏‡∏õ' - ‡∏î‡∏π‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ\n" +
    "üîî '‡∏™‡∏°‡∏±‡∏Ñ‡∏£' - ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô\n" +
    "üîï '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å' - ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô\n" +
    "üß™ '‡∏ó‡∏î‡∏™‡∏≠‡∏ö' - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô\n" +
    "‚ùì '‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠' - ‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î\n\n" +
    "üí° ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö: ‡∏û‡∏¥‡∏°‡∏û‡πå '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ!";
  
  await replyMessage(replyToken, helpMessage);
};

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
const handleSubscribeCommand = async (replyToken, userId) => {
  try {
    if (isUserSubscribed(userId)) {
      await replyMessage(replyToken, 
        "‚úÖ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß!\n\n" +
        "üîî ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢:\n" +
        "‚Ä¢ ‡∏ï‡∏≠‡∏ô 7:00 ‡∏ô. ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô\n" +
        "‚Ä¢ ‡∏ï‡∏≠‡∏ô 18:00 ‡∏ô. ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢)\n" +
        "‚Ä¢ ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå\n\n" +
        "‡∏û‡∏¥‡∏°‡∏û‡πå '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å' ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏∏‡∏î‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô"
      );
    } else {
      subscribeUser(userId);
      await replyMessage(replyToken, 
        "üéâ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n\n" +
        "üîî ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢:\n" +
        "‚Ä¢ ‡∏ï‡∏≠‡∏ô 7:00 ‡∏ô. ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô\n" +
        "‚Ä¢ ‡∏ï‡∏≠‡∏ô 18:00 ‡∏ô. ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢)\n" +
        "‚Ä¢ ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå\n\n" +
        "üí™ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á?"
      );
    }
  } catch (error) {
    console.error("Error in handleSubscribeCommand:", error);
    await replyMessage(replyToken, "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô");
  }
};

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
const handleUnsubscribeCommand = async (replyToken, userId) => {
  try {
    if (isUserSubscribed(userId)) {
      unsubscribeUser(userId);
      await replyMessage(replyToken, 
        "üîï ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n\n" +
        "‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏≠‡∏µ‡∏Å‡∏ï‡πà‡∏≠‡πÑ‡∏õ\n\n" +
        "üí° ‡∏û‡∏¥‡∏°‡∏û‡πå '‡∏™‡∏°‡∏±‡∏Ñ‡∏£' ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á"
      );
    } else {
      await replyMessage(replyToken, 
        "‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô\n\n" +
        "‡∏û‡∏¥‡∏°‡∏û‡πå '‡∏™‡∏°‡∏±‡∏Ñ‡∏£' ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢"
      );
    }
  } catch (error) {
    console.error("Error in handleUnsubscribeCommand:", error);
    await replyMessage(replyToken, "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô");
  }
};

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö
const handleTestCommand = async (replyToken, userId) => {
  try {
    const result = await testNotification(userId);
    
    if (result.success) {
      await replyMessage(replyToken, 
        "üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n\n" +
        "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏ß‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß\n\n" +
        "üí° ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á"
      );
    } else {
      await replyMessage(replyToken, 
        "‚ùå ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß\n\n" +
        "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö"
      );
    }
  } catch (error) {
    console.error("Error in handleTestCommand:", error);
    await replyMessage(replyToken, "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö");
  }
};
