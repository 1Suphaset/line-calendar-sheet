import { getTodayExercise, getExerciseByDay, formatExerciseMessage } from "../data/exerciseSchedule.js";
import { insertEvent } from "./calendar.service.js";
import { appendRow } from "./sheet.service.js";

// р╣Ар╕Бр╣Зр╕Ър╕кр╕Цр╕▓р╕Щр╕░р╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Вр╕нр╕Зр╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й
const userConfirmations = new Map();

// р╕кр╕гр╣Йр╕▓р╕Зр╕Бр╕▓р╕гр╣Бр╕Ир╣Йр╕Зр╣Ар╕Хр╕╖р╕нр╕Щр╕Бр╕▓р╕гр╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕в
export const createExerciseNotification = async (userId, dayKey = null) => {
  try {
    const exerciseData = dayKey ? getExerciseByDay(dayKey) : getTodayExercise();
    
    if (!exerciseData) {
      return {
        success: false,
        message: "р╣Др╕бр╣Ир╕Юр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Бр╕▓р╕гр╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕вр╕кр╕│р╕лр╕гр╕▒р╕Ър╕зр╕▒р╕Щр╕Щр╕╡р╣Й"
      };
    }

    const message = formatExerciseMessage(exerciseData);
    
    // р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕ер╕З Google Sheets
    await appendRow([
      userId,
      new Date().toLocaleString(),
      exerciseData.day,
      "Exercise Notification Sent",
      JSON.stringify(exerciseData.exercises)
    ]);

    return {
      success: true,
      message: message,
      exerciseData: exerciseData,
      userId: userId
    };
  } catch (error) {
    console.error("Error creating exercise notification:", error);
    return {
      success: false,
      message: "р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕гр╕кр╕гр╣Йр╕▓р╕Зр╕Бр╕▓р╕гр╣Бр╕Ир╣Йр╕Зр╣Ар╕Хр╕╖р╕нр╕Щ"
    };
  }
};

// р╕кр╕гр╣Йр╕▓р╕З Event р╣Гр╕Щ Google Calendar р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕в
export const createExerciseCalendarEvent = async (userId, exerciseData) => {
  try {
    const start = new Date();
    const end = new Date(start.getTime() + 30 * 60 * 1000); // 30 р╕Щр╕▓р╕Чр╕╡

    const eventData = {
      summary: `ЁЯПЛя╕ПтАНтЩАя╕П р╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕вр╕зр╕▒р╕Щ${exerciseData.day}`,
      description: `р╕Бр╕▓р╕гр╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕вр╕зр╕▒р╕Щ${exerciseData.day}\n\nр╕гр╕▓р╕вр╕Бр╕▓р╕гр╕Чр╣Ир╕▓:\n${exerciseData.exercises.map(ex => `- ${ex.name} (${ex.description})`).join('\n')}\n\nр╣Ар╕зр╕ер╕▓р╕гр╕зр╕б: ${exerciseData.totalTime}`,
      start: start.toISOString(),
      end: end.toISOString()
    };

    const event = await insertEvent(eventData);
    
    // р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕ер╕З Google Sheets
    await appendRow([
      userId,
      new Date().toLocaleString(),
      exerciseData.day,
      "Calendar Event Created",
      event.id
    ]);

    return {
      success: true,
      event: event
    };
  } catch (error) {
    console.error("Error creating calendar event:", error);
    return {
      success: false,
      message: "р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕гр╕кр╕гр╣Йр╕▓р╕З Event р╣Гр╕Щ Calendar"
    };
  }
};

// р╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Бр╕▓р╕гр╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕в
export const handleExerciseConfirmation = async (userId, confirmed) => {
  try {
    const today = new Date();
    const dayNames = ['р╕нр╕▓р╕Чр╕┤р╕Хр╕вр╣М', 'р╕Ир╕▒р╕Щр╕Чр╕гр╣М', 'р╕нр╕▒р╕Зр╕Др╕▓р╕г', 'р╕Юр╕╕р╕Ш', 'р╕Юр╕др╕лр╕▒р╕кр╕Ър╕Фр╕╡', 'р╕ир╕╕р╕Бр╕гр╣М', 'р╣Ар╕кр╕▓р╕гр╣М'];
    const todayName = dayNames[today.getDay()];
    
    // р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щ
    userConfirmations.set(userId, {
      date: today.toDateString(),
      confirmed: confirmed,
      timestamp: new Date()
    });

    // р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕ер╕З Google Sheets
    await appendRow([
      userId,
      new Date().toLocaleString(),
      todayName,
      confirmed ? "Exercise Confirmed" : "Exercise Skipped",
      confirmed ? "тЬЕ р╕вр╕╖р╕Щр╕вр╕▒р╕Щр╣Бр╕ер╣Йр╕з" : "тЭМ р╕Вр╣Йр╕▓р╕б"
    ]);

    let message = "";
    if (confirmed) {
      message = `ЁЯОЙ р╕вр╕нр╕Фр╣Ар╕вр╕╡р╣Ир╕вр╕б! р╕Др╕╕р╕Ур╣Др╕Фр╣Йр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Бр╕▓р╕гр╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕вр╕зр╕▒р╕Щ${todayName} р╣Бр╕ер╣Йр╕з\n\n`;
      message += `ЁЯТк р╣Ар╕Бр╣Ир╕Зр╕бр╕▓р╕Б! р╕Бр╕▓р╕гр╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕вр╕кр╕бр╣Ир╕│р╣Ар╕кр╕бр╕нр╕Ир╕░р╕Чр╕│р╣Гр╕лр╣Йр╕Др╕╕р╕Ур╣Бр╕Вр╣Зр╕Зр╣Бр╕гр╕Зр╕Вр╕╢р╣Йр╕Щ\n`;
      message += `ЁЯУК р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Вр╕нр╕Зр╕Др╕╕р╕Ур╣Др╕Фр╣Йр╕Цр╕╣р╕Бр╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╣Др╕зр╣Йр╣Бр╕ер╣Йр╕з\n\n`;
      message += `ЁЯФД р╕Юр╕гр╣Йр╕нр╕бр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕вр╕зр╕▒р╕Щр╕Юр╕гр╕╕р╣Ир╕Зр╕Щр╕╡р╣Йр╕лр╕гр╕╖р╕нр╕вр╕▒р╕З?`;
    } else {
      message = `ЁЯШФ р╣Др╕бр╣Ир╣Ар╕Ыр╣Зр╕Щр╣Др╕г! р╕Ър╕▓р╕Зр╕зр╕▒р╕Щр╕нр╕▓р╕Ир╕Ир╕░р╣Др╕бр╣Ир╕кр╕░р╕Фр╕зр╕Б\n\n`;
      message += `ЁЯТб р╕ер╕нр╕Зр╣Ар╕гр╕┤р╣Ир╕бр╣Гр╕лр╕бр╣Ир╕Юр╕гр╕╕р╣Ир╕Зр╕Щр╕╡р╣Й р╕лр╕гр╕╖р╕нр╣Ар╕ер╕╖р╕нр╕Бр╕Чр╣Ир╕▓р╕Зр╣Ир╕▓р╕вр╣Ж р╕Чр╕╡р╣Ир╕Чр╕│р╣Др╕Фр╣Й\n`;
      message += `ЁЯдЭ р╕Ир╕│р╣Др╕зр╣Йр╣Ар╕кр╕бр╕нр╕зр╣Ир╕▓ р╕Бр╕▓р╕гр╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щр╣Гр╕лр╕бр╣Ир╣Др╕бр╣Ир╣Ар╕Др╕вр╕кр╕▓р╕в\n\n`;
      message += `ЁЯТк р╕Юр╕гр╣Йр╕нр╕бр╕ер╕нр╕Зр╣Гр╕лр╕бр╣Ир╕лр╕гр╕╖р╕нр╕вр╕▒р╕З?`;
    }

    return {
      success: true,
      message: message,
      confirmed: confirmed
    };
  } catch (error) {
    console.error("Error handling exercise confirmation:", error);
    return {
      success: false,
      message: "р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щ"
    };
  }
};

// р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕кр╕Цр╕▓р╕Щр╕░р╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Вр╕нр╕Зр╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й
export const getUserConfirmationStatus = (userId) => {
  const today = new Date().toDateString();
  const userStatus = userConfirmations.get(userId);
  
  if (userStatus && userStatus.date === today) {
    return {
      hasConfirmed: true,
      confirmed: userStatus.confirmed,
      timestamp: userStatus.timestamp
    };
  }
  
  return {
    hasConfirmed: false,
    confirmed: null,
    timestamp: null
  };
};

// р╕кр╕гр╣Йр╕▓р╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕кр╕гр╕╕р╕Ыр╕Бр╕▓р╕гр╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕вр╕Ыр╕гр╕░р╕Ир╕│р╕кр╕▒р╕Ыр╕Фр╕▓р╕лр╣М
export const createWeeklySummary = (userId) => {
  try {
    const today = new Date();
    const weekStart = new Date(today);
    weekStart.setDate(today.getDate() - today.getDay()); // р╣Ар╕гр╕┤р╣Ир╕бр╕Ир╕▓р╕Бр╕зр╕▒р╕Щр╕нр╕▓р╕Чр╕┤р╕Хр╕вр╣М
    
    let confirmedDays = 0;
    let totalDays = 0;
    
    // р╕Щр╕▒р╕Ър╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╣Гр╕Щр╕кр╕▒р╕Ыр╕Фр╕▓р╕лр╣Мр╕Щр╕╡р╣Й
    for (let i = 0; i < 7; i++) {
      const checkDate = new Date(weekStart);
      checkDate.setDate(weekStart.getDate() + i);
      
      if (checkDate <= today) {
        totalDays++;
        // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щ (р╣Гр╕Щр╕гр╕░р╕Ър╕Ър╕Ир╕гр╕┤р╕Зр╕Др╕зр╕гр╣Ар╕Бр╣Зр╕Ър╣Гр╕Щр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е)
        // р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Хр╕нр╕Щр╕Щр╕╡р╣Йр╕Ир╕░р╣Гр╕Кр╣Йр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕▓р╕Б memory
      }
    }
    
    const dayNames = ['р╕нр╕▓р╕Чр╕┤р╕Хр╕вр╣М', 'р╕Ир╕▒р╕Щр╕Чр╕гр╣М', 'р╕нр╕▒р╕Зр╕Др╕▓р╕г', 'р╕Юр╕╕р╕Ш', 'р╕Юр╕др╕лр╕▒р╕кр╕Ър╕Фр╕╡', 'р╕ир╕╕р╕Бр╕гр╣М', 'р╣Ар╕кр╕▓р╕гр╣М'];
    const todayName = dayNames[today.getDay()];
    
    let message = `ЁЯУК р╕кр╕гр╕╕р╕Ыр╕Бр╕▓р╕гр╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕вр╕кр╕▒р╕Ыр╕Фр╕▓р╕лр╣Мр╕Щр╕╡р╣Й\n\n`;
    message += `ЁЯУЕ р╕зр╕▒р╕Щр╕Чр╕╡р╣И: ${weekStart.toLocaleDateString('th-TH')} - ${today.toLocaleDateString('th-TH')}\n`;
    message += `тЬЕ р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕бр╕╡р╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щ: ${confirmedDays}/${totalDays} р╕зр╕▒р╕Щ\n\n`;
    
    if (confirmedDays === totalDays) {
      message += `ЁЯПЖ р╕вр╕нр╕Фр╣Ар╕вр╕╡р╣Ир╕вр╕б! р╕Др╕╕р╕Ур╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕вр╕Др╕гр╕Ър╕Чр╕╕р╕Бр╕зр╕▒р╕Щр╣Гр╕Щр╕кр╕▒р╕Ыр╕Фр╕▓р╕лр╣Мр╕Щр╕╡р╣Й\n`;
      message += `ЁЯТк р╣Ар╕Бр╣Ир╕Зр╕бр╕▓р╕Б! р╕Др╕зр╕▓р╕бр╕кр╕бр╣Ир╕│р╣Ар╕кр╕бр╕нр╕Др╕╖р╕нр╕Бр╕╕р╕Нр╣Бр╕Ир╕кр╕╣р╣Ир╕Др╕зр╕▓р╕бр╕кр╕│р╣Ар╕гр╣Зр╕И`;
    } else if (confirmedDays >= totalDays * 0.7) {
      message += `ЁЯСН р╕Фр╕╡р╕бр╕▓р╕Б! р╕Др╕╕р╕Ур╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕вр╕кр╕бр╣Ир╕│р╣Ар╕кр╕бр╕н\n`;
      message += `ЁЯТб р╕ер╕нр╕Зр╣Ар╕Юр╕┤р╣Ир╕бр╕Др╕зр╕▓р╕бр╕Цр╕╡р╣Ир╣Гр╕лр╣Йр╕Др╕гр╕Ър╕Чр╕╕р╕Бр╕зр╕▒р╕Щр╕Фр╕╣р╕кр╕┤`;
    } else {
      message += `ЁЯТк р╕вр╕▒р╕Зр╕бр╕╡р╣Вр╕нр╕Бр╕▓р╕кр╕Ыр╕гр╕▒р╕Ър╕Ыр╕гр╕╕р╕Зр╣Др╕Фр╣Й\n`;
      message += `ЁЯОп р╕ер╕нр╕Зр╕Хр╕▒р╣Йр╕Зр╣Ар╕Ыр╣Йр╕▓р╕лр╕бр╕▓р╕вр╣Ар╕ер╣Зр╕Бр╣Ж р╣Бр╕ер╕░р╕Чр╕│р╕Чр╕╡р╕ер╕░р╕Вр╕▒р╣Йр╕Щ`;
    }
    
    message += `\n\nЁЯФД р╕Юр╕гр╣Йр╕нр╕бр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕вр╕зр╕▒р╕Щ${todayName} р╕лр╕гр╕╖р╕нр╕вр╕▒р╕З?`;
    
    return {
      success: true,
      message: message,
      confirmedDays: confirmedDays,
      totalDays: totalDays
    };
  } catch (error) {
    console.error("Error creating weekly summary:", error);
    return {
      success: false,
      message: "р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕гр╕кр╕гр╣Йр╕▓р╕Зр╕кр╕гр╕╕р╕Ы"
    };
  }
};
